import { db } from './index';
import { users, students, calendarEvents } from '../shared/schema';
import { eq } from 'drizzle-orm';

async function seedSampleData() {
  try {
    console.log('üå± Starting to seed sample data...');

    // Create sample library books in notifications table (as library schema not in main schema yet)
    const sampleNotifications = [
      {
        title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶á ‡¶∏‡¶Ç‡¶Ø‡ßã‡¶ú‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá",
        message: "‡¶ó‡¶£‡¶ø‡¶§ ‡¶Ö‡¶Ç‡¶ï ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶¨‡¶á ‡¶≤‡¶æ‡¶á‡¶¨‡ßç‡¶∞‡ßá‡¶∞‡¶ø‡¶§‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶è‡¶∏‡ßá‡¶õ‡ßá‡•§ ‡¶Ü‡¶ó‡ßç‡¶∞‡¶π‡ßÄ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞‡¶æ ‡¶á‡¶∏‡ßç‡¶Ø‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§",
        type: "library",
        isRead: false,
        sender: "‡¶ó‡ßç‡¶∞‡¶®‡ßç‡¶•‡¶æ‡¶ó‡¶æ‡¶∞‡¶ø‡¶ï",
        schoolId: 1,
        createdBy: 1
      },
      {
        title: "‡¶¨‡¶á ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∞‡ßã‡¶ß",
        message: "‡¶Ü‡¶Æ‡¶ø‡¶®‡ßÅ‡¶≤ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ - '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶∞‡¶£' ‡¶¨‡¶á‡¶ü‡¶ø ‡ßß‡ß´ ‡¶¶‡¶ø‡¶® ‡¶Ö‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§ ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶ú‡¶á ‡¶´‡ßá‡¶∞‡¶§ ‡¶¶‡¶ø‡¶®‡•§",
        type: "library",
        isRead: false,
        sender: "‡¶ó‡ßç‡¶∞‡¶®‡ßç‡¶•‡¶æ‡¶ó‡¶æ‡¶∞‡¶ø‡¶ï",
        schoolId: 1,
        createdBy: 1
      },
      {
        title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡¶∞‡¶ø‡¶¨‡¶π‡¶® ‡¶∞‡ßÅ‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ",
        message: "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶æ‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶≠‡¶æ‡¶°‡¶º‡¶æ ‡ßß‡ß´‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡•§",
        type: "transport",
        isRead: false,
        sender: "‡¶™‡¶∞‡¶ø‡¶¨‡¶π‡¶® ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó",
        schoolId: 1,
        createdBy: 1
      },
      {
        title: "‡¶á‡¶®‡¶≠‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü",
        message: "‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶≤‡ßç‡¶Ø‡¶æ‡¶¨‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡ßß‡ß¶‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ï‡ßç‡¶∞‡¶Ø‡¶º ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§ ‡¶∂‡ßÄ‡¶ò‡ßç‡¶∞‡¶á ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá‡•§",
        type: "inventory",
        isRead: false,
        sender: "‡¶™‡ßç‡¶∞‡¶∂‡¶æ‡¶∏‡¶®",
        schoolId: 1,
        createdBy: 1
      },
      {
        title: "‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶´‡¶ø ‡¶™‡¶∞‡¶ø‡¶∂‡ßã‡¶ß‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÄ‡¶Æ‡¶æ",
        message: "‡¶ú‡ßÅ‡¶® ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶´‡¶ø ‡ß©‡ß¶ ‡¶ú‡ßÅ‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶™‡¶∞‡¶ø‡¶∂‡ßã‡¶ß ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§ ‡¶¨‡¶ø‡¶≤‡¶Æ‡ßç‡¶¨ ‡¶π‡¶≤‡ßá ‡ßß‡ß¶% ‡¶ú‡¶∞‡¶ø‡¶Æ‡¶æ‡¶®‡¶æ ‡¶™‡ßç‡¶∞‡¶Ø‡ßã‡¶ú‡ßç‡¶Ø‡•§",
        type: "financial",
        isRead: true,
        sender: "‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶∏ ‡¶Ö‡¶´‡¶ø‡¶∏",
        schoolId: 1,
        createdBy: 1
      },
      {
        title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡¶∞‡ßç‡¶∑ ‡¶∂‡ßÅ‡¶∞‡ßÅ",
        message: "‡ß®‡ß¶‡ß®‡ß´-‡ß®‡ß¨ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡¶∞‡ßç‡¶∑ ‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ ‡ßß ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶¨‡ßá‡•§ ‡¶≠‡¶∞‡ßç‡¶§‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶∂‡ßÅ‡¶∞‡ßÅ‡•§",
        type: "academic",
        isRead: false,
        sender: "‡¶™‡ßç‡¶∞‡¶ß‡¶æ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï",
        schoolId: 1,
        createdBy: 1
      }
    ];

    // Add more calendar events for variety
    const additionalEvents = [
      {
        title: "‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶ï‡ßç‡¶∞‡ßÄ‡¶°‡¶º‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ",
        description: "‡¶∏‡¶ï‡¶≤ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡ßá ‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶ï‡ßç‡¶∞‡ßÄ‡¶°‡¶º‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ",
        startDate: "2025-06-25",
        startTime: "08:00:00",
        endTime: "17:00:00",
        location: "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶Æ‡¶æ‡¶†",
        eventType: "sports",
        isAllDay: false,
        isRecurring: false,
        notifyParticipants: true,
        createdBy: 1,
        schoolId: 1
      },
      {
        title: "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶® ‡¶Æ‡ßá‡¶≤‡¶æ",
        description: "‡ßÆ‡¶Æ ‡¶ì ‡ßØ‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶™‡ßç‡¶∞‡¶¶‡¶∞‡ßç‡¶∂‡¶®‡ßÄ",
        startDate: "2025-06-30",
        startTime: "09:00:00",
        endTime: "15:00:00",
        location: "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶® ‡¶≠‡¶¨‡¶®",
        eventType: "academic",
        isAllDay: false,
        isRecurring: false,
        notifyParticipants: true,
        createdBy: 1,
        schoolId: 1
      },
      {
        title: "‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï ‡¶¶‡¶ø‡¶¨‡¶∏",
        description: "‡¶∏‡¶ï‡¶≤ ‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Ö‡¶ó‡ßç‡¶∞‡¶ó‡¶§‡¶ø ‡¶®‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ü‡¶≤‡ßã‡¶ö‡¶®‡¶æ",
        startDate: "2025-07-05",
        startTime: "10:00:00",
        endTime: "16:00:00",
        location: "‡¶∏‡¶≠‡¶æ ‡¶ï‡¶ï‡ßç‡¶∑",
        eventType: "meeting",
        isAllDay: false,
        isRecurring: false,
        notifyParticipants: true,
        createdBy: 1,
        schoolId: 1
      }
    ];

    // Insert additional calendar events
    for (const event of additionalEvents) {
      try {
        await db.insert(calendarEvents).values(event);
        console.log(`‚úÖ Added calendar event: ${event.title}`);
      } catch (error) {
        console.log(`‚ö†Ô∏è Calendar event ${event.title} might already exist`);
      }
    }

    // Since we don't have notification table in schema, we'll store in a temporary way
    // For now, create a JSON file with sample data that the notification API can serve
    const fs = require('fs');
    const path = require('path');
    
    const sampleDataDir = path.join(process.cwd(), 'sample-data');
    if (!fs.existsSync(sampleDataDir)) {
      fs.mkdirSync(sampleDataDir, { recursive: true });
    }

    // Store sample notifications
    fs.writeFileSync(
      path.join(sampleDataDir, 'notifications.json'),
      JSON.stringify(sampleNotifications, null, 2)
    );

    // Store sample library data
    const sampleLibraryData = {
      books: [
        {
          id: 1,
          title: "Advanced Mathematics",
          titleBn: "‡¶â‡¶ö‡ßç‡¶ö‡¶§‡¶∞ ‡¶ó‡¶£‡¶ø‡¶§",
          author: "‡¶°. ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶Ü‡¶≤‡ßÄ",
          isbn: "978-984-123-456-7",
          category: "textbook",
          publisher: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂‡¶®‡ßÄ",
          publishYear: 2024,
          totalCopies: 15,
          availableCopies: 12,
          location: "‡¶∂‡ßá‡¶≤‡¶´ A-‡ßß",
          description: "‡¶¶‡¶∂‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ‡¶∞ ‡¶ó‡¶£‡¶ø‡¶§ ‡¶¨‡¶á"
        },
        {
          id: 2,
          title: "Bengali Literature",
          titleBn: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø",
          author: "‡¶∞‡¶¨‡ßÄ‡¶®‡ßç‡¶¶‡ßç‡¶∞‡¶®‡¶æ‡¶• ‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞",
          isbn: "978-984-234-567-8",
          category: "literature",
          publisher: "‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂‡¶®",
          publishYear: 2023,
          totalCopies: 20,
          availableCopies: 18,
          location: "‡¶∂‡ßá‡¶≤‡¶´ B-‡ß®",
          description: "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶æ‡¶π‡¶ø‡¶§‡ßç‡¶Ø‡ßá‡¶∞ ‡¶∏‡¶Ç‡¶ï‡¶≤‡¶®"
        },
        {
          id: 3,
          title: "Physics Fundamentals",
          titleBn: "‡¶™‡¶¶‡¶æ‡¶∞‡ßç‡¶•‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø",
          author: "‡¶°. ‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶ï‡¶∞‡¶ø‡¶Æ",
          isbn: "978-984-345-678-9",
          category: "science",
          publisher: "‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂‡¶®‡ßÄ",
          publishYear: 2024,
          totalCopies: 12,
          availableCopies: 8,
          location: "‡¶∂‡ßá‡¶≤‡¶´ C-‡ß©",
          description: "‡¶®‡¶¨‡¶Æ ‡¶ì ‡¶¶‡¶∂‡¶Æ ‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ‡¶∞ ‡¶™‡¶¶‡¶æ‡¶∞‡ßç‡¶•‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®"
        }
      ],
      borrowed: [
        {
          id: 1,
          bookId: 1,
          studentId: 1,
          borrowDate: "2025-06-01",
          dueDate: "2025-06-15",
          status: "active",
          book: { title: "Advanced Mathematics", titleBn: "‡¶â‡¶ö‡ßç‡¶ö‡¶§‡¶∞ ‡¶ó‡¶£‡¶ø‡¶§" },
          student: { name: "Aminul Islam", nameBn: "‡¶Ü‡¶Æ‡¶ø‡¶®‡ßÅ‡¶≤ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ" }
        },
        {
          id: 2,
          bookId: 3,
          studentId: 2,
          borrowDate: "2025-06-03",
          dueDate: "2025-06-17",
          status: "active",
          book: { title: "Physics Fundamentals", titleBn: "‡¶™‡¶¶‡¶æ‡¶∞‡ßç‡¶•‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø" },
          student: { name: "Fatema Sultana", nameBn: "‡¶´‡¶æ‡¶§‡ßá‡¶Æ‡¶æ ‡¶∏‡ßÅ‡¶≤‡¶§‡¶æ‡¶®‡¶æ" }
        }
      ],
      stats: {
        totalBooks: 47,
        availableBooks: 38,
        borrowedBooks: 9,
        activeBorrowers: 7,
        overdueBooks: 2,
        overdueBorrowers: 2,
        popularBooks: 5
      }
    };

    fs.writeFileSync(
      path.join(sampleDataDir, 'library.json'),
      JSON.stringify(sampleLibraryData, null, 2)
    );

    // Store sample inventory data
    const sampleInventoryData = {
      items: [
        {
          id: 1,
          name: "Desktop Computer",
          nameBn: "‡¶°‡ßá‡¶∏‡ßç‡¶ï‡¶ü‡¶™ ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞",
          category: "electronics",
          brand: "Dell",
          model: "OptiPlex 3090",
          currentQuantity: 25,
          minimumThreshold: 5,
          unit: "piece",
          purchasePrice: 45000,
          location: "‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶≤‡ßç‡¶Ø‡¶æ‡¶¨",
          condition: "good"
        },
        {
          id: 2,
          name: "Whiteboard",
          nameBn: "‡¶π‡ßã‡¶Ø‡¶º‡¶æ‡¶á‡¶ü‡¶¨‡ßã‡¶∞‡ßç‡¶°",
          category: "furniture",
          brand: "Standard",
          currentQuantity: 30,
          minimumThreshold: 10,
          unit: "piece",
          purchasePrice: 1500,
          location: "‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶∞‡ßÅ‡¶Æ A",
          condition: "good"
        },
        {
          id: 3,
          name: "Projector",
          nameBn: "‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶∞",
          category: "electronics",
          brand: "Epson",
          model: "EB-X06",
          currentQuantity: 3,
          minimumThreshold: 2,
          unit: "piece",
          purchasePrice: 35000,
          location: "AV ‡¶∞‡ßÅ‡¶Æ",
          condition: "excellent"
        }
      ],
      movements: [
        {
          id: 1,
          type: "in",
          quantity: 10,
          reason: "‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡ßç‡¶∞‡¶Ø‡¶º",
          createdAt: "2025-06-01",
          item: { nameBn: "‡¶°‡ßá‡¶∏‡ßç‡¶ï‡¶ü‡¶™ ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞", unit: "piece" }
        },
        {
          id: 2,
          type: "out",
          quantity: 2,
          reason: "‡¶Æ‡ßá‡¶∞‡¶æ‡¶Æ‡¶§‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø",
          createdAt: "2025-06-02",
          item: { nameBn: "‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶∞", unit: "piece" }
        }
      ],
      stats: {
        totalItems: 58,
        totalCategories: 5,
        totalValue: 1250000,
        lowStockItems: 3,
        outOfStockItems: 1
      },
      lowStock: [
        {
          id: 3,
          nameBn: "‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡¶∞",
          currentQuantity: 3,
          minimumThreshold: 2,
          unit: "piece"
        }
      ]
    };

    fs.writeFileSync(
      path.join(sampleDataDir, 'inventory.json'),
      JSON.stringify(sampleInventoryData, null, 2)
    );

    // Store sample transport data
    const sampleTransportData = {
      vehicles: [
        {
          id: 1,
          vehicleNumber: "‡¶¢‡¶æ‡¶ï‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡ßã-‡¶ó-‡ßß‡ß®‡ß©‡ß™",
          type: "bus",
          capacity: 40,
          driverName: "‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶Ü‡¶≤‡ßÄ",
          driverPhone: "‡ß¶‡ßß‡ß≠‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¶‡ß¶‡ßß",
          helperName: "‡¶ï‡¶∞‡¶ø‡¶Æ ‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶®",
          helperPhone: "‡ß¶‡ßß‡ßÆ‡ßÆ‡ß≠‡ß¨‡ß´‡ß™‡ß©‡ß®‡ßß",
          isActive: true,
          route: { name: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø - ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤" }
        },
        {
          id: 2,
          vehicleNumber: "‡¶¢‡¶æ‡¶ï‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡ßã-‡¶ñ-‡ß´‡ß¨‡ß≠‡ßÆ",
          type: "microbus",
          capacity: 20,
          driverName: "‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®",
          driverPhone: "‡ß¶‡ßß‡ßØ‡ßÆ‡ß≠‡ß¨‡ß´‡ß™‡ß©‡ß®‡ßß",
          isActive: true,
          route: { name: "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ - ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤" }
        },
        {
          id: 3,
          vehicleNumber: "‡¶¢‡¶æ‡¶ï‡¶æ ‡¶Æ‡ßá‡¶ü‡ßç‡¶∞‡ßã-‡¶ò-‡ßØ‡ßß‡ß¶‡ßß",
          type: "van",
          capacity: 12,
          driverName: "‡¶Æ‡ßã. ‡¶∞‡¶´‡¶ø‡¶ï",
          driverPhone: "‡ß¶‡ßß‡ß¨‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ",
          isActive: false,
          route: null
        }
      ],
      routes: [
        {
          id: 1,
          name: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø - ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤",
          startPoint: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø",
          endPoint: "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤",
          distance: 15,
          estimatedTime: 45,
          fare: 1200,
          stops: ["‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø", "‡¶ï‡¶≤‡¶æ‡¶¨‡¶æ‡¶ó‡¶æ‡¶®", "‡¶∞‡¶Æ‡¶®‡¶æ", "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤"]
        },
        {
          id: 2,
          name: "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ - ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤",
          startPoint: "‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ",
          endPoint: "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤",
          distance: 25,
          estimatedTime: 60,
          fare: 1500,
          stops: ["‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ", "‡¶∂‡¶æ‡¶π‡¶¨‡¶æ‡¶ó", "‡¶™‡¶≤‡ßç‡¶ü‡¶®", "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤"]
        }
      ],
      students: [
        {
          id: 1,
          studentId: 1,
          routeId: 1,
          pickupStop: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø",
          dropStop: "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤",
          monthlyFee: 1200,
          isActive: true,
          student: { name: "‡¶Ü‡¶Æ‡¶ø‡¶®‡ßÅ‡¶≤ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ" },
          route: { name: "‡¶ß‡¶æ‡¶®‡¶Æ‡¶®‡ßç‡¶°‡¶ø - ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤" }
        }
      ],
      stats: {
        totalVehicles: 15,
        activeVehicles: 12,
        totalRoutes: 8,
        activeRoutes: 6,
        transportStudents: 320,
        totalCapacity: 500,
        monthlyRevenue: 384000
      }
    };

    fs.writeFileSync(
      path.join(sampleDataDir, 'transport.json'),
      JSON.stringify(sampleTransportData, null, 2)
    );

    console.log('‚úÖ Sample data files created successfully!');
    console.log('üìÅ Files created:');
    console.log('   - sample-data/notifications.json');
    console.log('   - sample-data/library.json');
    console.log('   - sample-data/inventory.json');
    console.log('   - sample-data/transport.json');

  } catch (error) {
    console.error('‚ùå Error seeding sample data:', error);
  }
}

seedSampleData().catch(console.error);