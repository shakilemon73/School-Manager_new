# ⚠️ LEGACY FILE - NOT USED FOR CURRENT DEPLOYMENT ⚠️
# 
# This file was the original Cloudflare Workers configuration for Express.js backend.
# It is NO LONGER USED because:
# 1. Express.js is not compatible with Cloudflare Workers/Pages
# 2. The app now uses frontend-only deployment (Cloudflare Pages)
# 3. Backend operations are handled by Supabase (serverless)
#
# For current deployment configuration, see:
# - CLOUDFLARE_DEPLOYMENT_GUIDE.md (complete deployment guide)
# - .env.cloudflare.example (environment variables)
# - package.json scripts: build:cloudflare, deploy:cloudflare
#
# This file is kept for reference only.
# DO NOT USE THIS FILE FOR DEPLOYMENT.
#
# ---
# Original Cloudflare Workers Configuration
# School Management System - Express.js Deployment (DEPRECATED)

name = "school-management-system"
main = "server/index.ts"
compatibility_date = "2025-09-15"

# Enable Node.js compatibility for Express.js
# These flags enable full Express.js support including http server modules
compatibility_flags = [
  "nodejs_compat"
]

# Production environment variables (public, non-sensitive)
[vars]
NODE_ENV = "production"

# IMPORTANT: Set sensitive environment variables using Wrangler CLI or Dashboard
# Run these commands to set secrets:
# 
# wrangler secret put SUPABASE_URL
# wrangler secret put SUPABASE_ANON_KEY  
# wrangler secret put SUPABASE_SERVICE_KEY
# wrangler secret put SESSION_SECRET
# wrangler secret put VITE_SUPABASE_URL
# wrangler secret put VITE_SUPABASE_ANON_KEY
#
# Or set them in Cloudflare Dashboard:
# Workers & Pages → Your Worker → Settings → Variables

# Optional: KV Namespace for caching (if needed in future)
# [[kv_namespaces]]
# binding = "CACHE"
# id = "your-kv-namespace-id"
# preview_id = "your-preview-kv-namespace-id"

# Optional: D1 Database (if you want to add Cloudflare's SQL database)
# [[d1_databases]]
# binding = "DB"
# database_name = "school-db"
# database_id = "your-database-id"
# preview_database_id = "your-preview-database-id"

# Optional: R2 Object Storage (for file uploads like student photos)
# [[r2_buckets]]
# binding = "UPLOADS"
# bucket_name = "school-uploads"
# preview_bucket_name = "school-uploads-preview"

# Optional: Durable Objects for WebSocket support (real-time features)
# [[durable_objects.bindings]]
# name = "CHAT"
# class_name = "ChatRoom"
# script_name = "school-management-system"

# Asset configuration for serving React frontend
# Cloudflare Workers will automatically serve files from /public directory
[assets]
directory = "./public"
binding = "ASSETS"

# Optional: Custom routes (if you want specific URL patterns)
# [routes]
# pattern = "school.yourdomain.com/*"
# zone_name = "yourdomain.com"

# Build configuration (optional - if you need custom build steps)
# [build]
# command = "npm run build"
# watch_dirs = ["server", "client"]

# Limits and performance
[limits]
# Maximum CPU time per request (5 minutes for paid plan)
cpu_ms = 300000

# Development configuration
[env.development]
vars = { NODE_ENV = "development" }

# Staging configuration
[env.staging]
name = "school-management-system-staging"
vars = { NODE_ENV = "staging" }

# Deployment notes:
# 1. Build your frontend: npm run build
# 2. Set all secrets: wrangler secret put SECRET_NAME
# 3. Deploy: wrangler deploy
# 4. View logs: wrangler tail
# 5. Add custom domain in Cloudflare Dashboard
